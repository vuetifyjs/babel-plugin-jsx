// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`dynamic slots 'computed key' 1`] = `
"import { resolveComponent as _resolveComponent, createVNode as _createVNode } from "vue";
_createVNode(_resolveComponent("A"), null, {
  [name]: () => {}
}, 1024);"
`;

exports[`dynamic slots 'conditional on slot existence' 1`] = `
"import { resolveComponent as _resolveComponent, createVNode as _createVNode } from "vue";
_createVNode(_resolveComponent("A"), null, {
  default: slots.default ? slots.default() : () => {},
  _: 2
}, 1024);"
`;

exports[`dynamic slots 'conditional value' 1`] = `
"import { resolveComponent as _resolveComponent, createVNode as _createVNode } from "vue";
_createVNode(_resolveComponent("A"), null, {
  default: foo ? () => {} : undefined
}, 1024);"
`;

exports[`dynamic slots 'spread and computed key' 1`] = `
"import { resolveComponent as _resolveComponent, createVNode as _createVNode } from "vue";
_createVNode(_resolveComponent("A"), null, {
  ...slots,
  [name]: () => {}
}, 1024);"
`;

exports[`dynamic slots 'spread and conditional value' 1`] = `
"import { resolveComponent as _resolveComponent, createVNode as _createVNode } from "vue";
_createVNode(_resolveComponent("A"), null, {
  ...slots,
  default: foo ? () => {} : undefined
}, 1024);"
`;

exports[`forwarded slots 'conditional on slot existence' 1`] = `
"import { resolveComponent as _resolveComponent, createVNode as _createVNode } from "vue";
_createVNode(_resolveComponent("A"), null, {
  default: slots.default ? slots.default() : undefined,
  $stable: true
});"
`;

exports[`forwarded slots 'simple forward' 1`] = `
"import { resolveComponent as _resolveComponent, createVNode as _createVNode } from "vue";
_createVNode(_resolveComponent("A"), null, {
  foo: slots.foo,
  $stable: true
});"
`;

exports[`forwarded slots 'spread all' 1`] = `
"import { resolveComponent as _resolveComponent, createVNode as _createVNode } from "vue";
_createVNode(_resolveComponent("A"), null, {
  ...slots,
  $stable: true
});"
`;

exports[`forwarded slots 'spread and add stable' 1`] = `
"import { resolveComponent as _resolveComponent, createVNode as _createVNode } from "vue";
_createVNode(_resolveComponent("A"), null, {
  ...slots,
  foo: () => {},
  $stable: true
});"
`;

exports[`forwarded slots 'spread and conditional' 1`] = `
"import { resolveComponent as _resolveComponent, createVNode as _createVNode } from "vue";
_createVNode(_resolveComponent("A"), null, {
  ...slots,
  default: slots.default ? slots.default() : undefined,
  $stable: true
});"
`;

exports[`forwarded slots 'v-slots passthrough' 1`] = `
"import { resolveComponent as _resolveComponent, createVNode as _createVNode } from "vue";
_createVNode(_resolveComponent("A"), null, {
  ...slots,
  $stable: true
});"
`;

exports[`stable slots 'basic' 1`] = `
"import { resolveComponent as _resolveComponent, createVNode as _createVNode } from "vue";
_createVNode(_resolveComponent("A"), null, {
  default: () => {},
  $stable: true
});"
`;

exports[`stable slots 'nested slots' 1`] = `
"import { Fragment as _Fragment, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode } from "vue";
_createVNode(_resolveComponent("A"), null, {
  foo: ({
    bar
  }) => _createVNode(_resolveComponent("B"), null, {
    foo: () => {
      return _createElementVNode(_Fragment, null, [bar], 1024);
    }
  }, 1024),
  $stable: true
});"
`;
